Thread

스레드(멀티스레드)란? 
하나의 프로그램이 동시에 여러 개의 일을 수행할 수 있도록 해 주는 것이다. 

JAVA는 기본적으로 멀티스레드를 지원하기 위해 java.lang.Thread 클래스를 제공하고 있습니다.
멀티프로세스 vs. 멀티스레드
하나의 새로운 프로세스를 생성하는 멀티프로세스 보다 하나의 새로운 쓰레드를 생성하는 것이 더 적은 비용이 듭니다.
스레드는 두 가지 형태로 존재 합니다. 하나는 n개의 스레드가 객체 하나를 공유하는 방식이고, 또 다른 하나는 n개의 스레드가 각각 객체 n개를 사용하는 방식 입니다.
(멀티스레드의 장점)
자원을 보다 효율적으로 사용할 수 있다.
사용자에 대한 응답성이 향상된다.
작업이 분리되어 코드가 간결해 진다.
(멀티스레드의 단점)
동기화(synchronization)에 주의해야 한다.
교착상태(dead-lock)가 발생하지 않도록 주의해야 한다.
각 쓰레드가 효율적으로 고르게 실행될 수 있게 해야 한다(☞프로그래밍할 때 고려해야 할 사항들이 많다)

	스레드의 생명주기
가)	생성 
나)	수행
다)	대기
라)	완료

	Synchronized
객체에 선언되어 있는 인스턴스 변수를 스레드에서 공유하게 되어, 인스턴스의 값에 영향을 미치게 됩니다.
이런 경우를 대비해서 JAVA에서는 synchronized라는 키워드를 이용합니다. Synchronized는 먼저 수행되는 스레드의 모든 작업이 끝날 때까지 다른 스레드는 기다리도록 하는 예약어입니다.
즉, 동기화란? 하나의 자원을 여러 태스크가 사용하려 할 때에, 한 시점에서 하나의 태스크만이 사용할 수 이도록 하는 것.
