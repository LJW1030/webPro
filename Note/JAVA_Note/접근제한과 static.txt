※	멤버변수 선언
   [접근제한자] [static/final] 데이터형 변수명;

   ① [접근제한자] 접근제한이란 클래스의 데이터나 메소드에 대해서 다른 클래스로부터 접근을 제한하는 것.
    public : 접근을 제한하지 않는다. 다른 모든 클래스에서 사용 가능
    protected : 해당 클래스와 동일한 패키지에 있거나 상속받은 클래스일 경우에만 사용 가능
    default : 접근제어자를 명시하지 않은 경우의 디폴드 접근제어자. 같은 패키지내의 클래스들은 
              public 권한을 갖고 접근가능
    private : 해당 클래스만이 이 멤버를 사용할 수 있다. 외부객체에서는 절대로 접근할 수 없다.


      ② static : 클래스변수(=static 변수)
	 ; 객체변수(객체속성)는 객체가 생성될 때마다 각 객체 안의 속성 변수들이 생성되지만, 
	   클래스 변수는 클래스로부터 생성된 객체들의 수와 상관없이 하나만 생성된다.
	   한 클래스로부터 생성된 모든 객체들은 클래스 변수를 공유
	   클래스 변수를 이용하여 객체들 사이의 통신에 사용하거나 객체들의 공통속성을 나타낼 수 있다.
	   객체변수와 달리 클래스 변수(static 변수)는 클래스 이름을 통하여 접근한다.
       i.	 static의 이해 
	  ; 객체들끼리 공유하고 싶은 정보가 있을 때 사용. 일명 깍두기. 
           필요에 의해 클래스를 만들고, 사용할 때는 new 연산자를 통해 객체로 만들어서 사용한다다.


     static의 장점과 단점
        -객체 생성을 하지 않고도 사용할 수 있는다는 것은 분명 장점이지만, 한편으로 생각해 보면 가비지콜렉터의 관리 밖에 있기 때문에 항상 메모리에 상주해 있다.
      즉 프로젝트가 커지고, 시스템이 오랜 시간 동안 돌아가게 되면 시스템 운영속도가 점차 느려지다가 급기야 큰 재앙이 올 수도 있다. 
      따라서 static의 사용은 신중해야 된다.
